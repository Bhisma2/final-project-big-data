services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - '2181:2181'

  kafka:
    image: 'bitnami/kafka:latest'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
  
  minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data

  postgres-ml:
    image: postgres:14
    environment:
      POSTGRES_DB: kel4mldb
      POSTGRES_USER: kel4mluser
      POSTGRES_PASSWORD: kel4mlpassword
    ports:
      - "5432:5432"

  flask-api:
      build:
        context: ./api
        dockerfile: Dockerfile
      ports:
        - "5000:5000"
      environment:
        - FLASK_ENV=development
      restart: always                       # Tambahkan agar service restart jika terjadi crash

volumes:
  minio-data:
